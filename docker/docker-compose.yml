version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cliniflow-postgres
    environment:
      POSTGRES_DB: cliniflow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../cliniflow-server/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional, for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: cliniflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CliniFlow API Server
  api:
    build: 
      context: ../cliniflow-server
      dockerfile: Dockerfile
    container_name: cliniflow-api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/cliniflow
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-here
      PORT: 3001
      CORS_ORIGIN: http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../cliniflow-server:/app
      - /app/node_modules
    command: npm run dev

  # CliniFlow Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cliniflow-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_APP_NAME: CliniFlow
      VITE_NODE_ENV: development
    depends_on:
      - api
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
